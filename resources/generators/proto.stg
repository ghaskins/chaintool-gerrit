
emitfield(field) ::= "<field.modifier> <field.type> <field.name> = <field.index>;"

emitmsg(msg) ::=
<<
message <msg.name> {
        <emitdefs(msg.entries)>
}
>>

emitenum(enum) ::=
<<
enum <enum.name> {
        <enum.entries.values:{field |<emitfield(field)>}; separator="\n">
}
>>

emitdef(def) ::=
<<
<if(def.message)><emitmsg(def.message)>
<elseif(def.enum)><emitenum(def.enum)>
<else><emitfield(def.field)><endif>
>>

emitdefs(defs) ::= "<defs.values:{def |<emitdef(def)>}; separator=\"\n\">"

protobuf(package, definitions, functions) ::=
<<
//
// Generated by chaintool.  DO NOT EDIT!!
//

syntax = "proto3";

package <package>;

<emitdefs(definitions)>

<if(functions.values)>
//
// Available RPC functions exported by this interface
//
<endif>
<functions.values:{func | // <func.rettype> <func.name>(<func.param>) -> <func.key> }; separator="\n">

>>
